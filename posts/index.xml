<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Blog</title><link>https://wsdookadr.github.io/posts/</link><description>Recent content in Posts on Blog</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Sun, 21 Feb 2021 00:00:00 +0000</lastBuildDate><atom:link href="https://wsdookadr.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Fast sub-tree containment checks</title><link>https://wsdookadr.github.io/posts/p3/</link><pubDate>Sun, 21 Feb 2021 00:00:00 +0000</pubDate><guid>https://wsdookadr.github.io/posts/p3/</guid><description>MathJax.Hub.Config({ tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], displayMath: [['$$','$$'], ['\[','\]']], processEscapes: true, processEnvironments: true, skipTags: ['script', 'noscript', 'style', 'textarea', 'pre'], TeX: { equationNumbers: { autoNumber: "AMS" }, extensions: ["AMSmath.js", "AMSsymbols.js"] } } }); MathJax.Hub.Queue(function() { // Fix tags after MathJax finishes running. This is a // hack to overcome a shortcoming of Markdown. Discussion at // https://github.com/mojombo/jekyll/issues/199 var all = MathJax.Hub.getAllJax(), i; for(i = 0; i There’s a problem on leetcode called &amp;#34;Subtree of Another tree&amp;#34;.</description></item><item><title>Non-standard solutions to some technical problems</title><link>https://wsdookadr.github.io/posts/p2/</link><pubDate>Sat, 20 Feb 2021 00:00:00 +0000</pubDate><guid>https://wsdookadr.github.io/posts/p2/</guid><description>Intro When I’m interviewing for contracts or for jobs, many times I get asked what are the hardest problems I’ve had to deal with. I’ll write below some of these problems as I remember them now.
Double-counting Some years ago, I was a consultant for a job in an analytics team. I was tasked with finding a bug in code that was counting the views of a top-10 Alexa website with hundreds of millions of views every month.</description></item><item><title>Setting up the new blog</title><link>https://wsdookadr.github.io/posts/p1/</link><pubDate>Thu, 18 Feb 2021 00:00:00 +0000</pubDate><guid>https://wsdookadr.github.io/posts/p1/</guid><description>Previous setup Previously I was writing a blog using the following: Emacs + Org-Mode + Jekyll. Here is a short assessment of that setup:
The pros:
Emacs tries to pack as much functionality as possible without the need for external dependencies
Org-Mode allows you to have runnable code blocks and include the results of said code blocks inside the rendered version of the documents. The active document concept is really nice (but nowadays that’s also achievable with Jupyter)</description></item></channel></rss>